Step-0: Create a table to hold the request raised by the user
 
CREATE TABLE XX_OIM_REQUEST(
    ,REQ_ID NUMBER PRIMARY KEY
    ,RESP_REQ_ID NUMBER
    ,NOTIFICATION_ID NUMBER
    ,REQUEST_STATUS VARCHAR2(20) CHECK (REQUEST_STATUS IN ('NOTIFIED', 'MGR_APPROVED', 'FUNC_APPROVED', 'RM_APPROVED', 'PROCESSED', 'REJECTED'))
    ,CREATION_DATE DATE
    ,CREATED_BY VARCHAR2(50)
    ,LAST_UPDATE_DATE DATE
    ,LAST_UPDATED_BY VARCHAR2(50)
    ,LAST_LOGIN_BY VARCHAR2(50)
);
 
Step-1: Create a table to hold the request raised by the user for the responsibility 
 
CREATE TABLE xx_oim_resp_req (
    INSTANCE_NAME VARCHAR2(100),
    RESP_REQ_ID NUMBER PRIMARY KEY,
    REQ_ID NUMBER,
    remark VARCHAR2(255),
    responsibility_id number,
    RESPONSIBILITY_NAME VARCHAR2(100),
    user_id number,
    USER_NAME VARCHAR2 (20),
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR2(100),
    last_update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated_by VARCHAR2(100),
    last_login_by VARCHAR2(100)
);
 
Step-2: Create a table to hold the notifications of various different levels
 
CREATE TABLE XX_OIM_NOTIF(
    NOTIFICATION_ID NUMBER PRIMARY KEY
    ,FROM_ADDR VARCHAR2(50)
    ,TO_ADDR VARCHAR2(50)
    ,SUBJECT VARCHAR2(100)
    ,BODY VARCHAR2 (1000)
    ,NOTIFICATION_STATUS VARCHAR2(20) CHECK (NOTIFICATION_STATUS IN ('NOTIFIED', 'COMPLETED'))
     ,REQUEST_STATUS VARCHAR2(20) CHECK (REQUEST_STATUS IN ('NOTIFIED', 'MGR_APPROVED', 'FUNC_APPROVED', 'RM_APPROVED', 'REJECTED'))
    ,MAIL_TO_USRID VARCHAR2(100)
    ,REQ_ID NUMBER
    ,CREATION_DATE DATE
    ,CREATED_BY VARCHAR2(50)
    ,LAST_UPDATE_DATE DATE
    ,LAST_UPDATED_BY VARCHAR2(50)
    ,LAST_LOGIN_BY VARCHAR2(50)
);
 
Step-3: Create a table to hold all the request history
  
CREATE TABLE XX_OIM_REQ_APPR_HIST (
    INSTANCE_NAME VARCHAR2(100)
    ,APPROVER_ID NUMBER PRIMARY KEY
    ,APPROVER_NAME VARCHAR2(100)
    ,APPROVER_STATUS VARCHAR2(100)
    ,USER_ID NUMBER
    ,NOTIF_ID NUMBER
    ,CREATION_DATE DATE
    ,CREATED_BY VARCHAR2(100)
    ,LAST_UPDATE_DATE DATE
    ,LAST_UPDATED_BY VARCHAR2(100)
    ,LAST_UPDATE_LOGIN VARCHAR2(100)
    ,CONSTRAINT FK_USR_ID FOREIGN KEY (USER_ID) REFERENCES XX_OIM_USER(USER_ID)
    ,CONSTRAINT FK_NOTIF_ID FOREIGN KEY (NOTIF_ID) REFERENCES XX_OIM_NOTIF(NOTIFICATION_ID)
);
